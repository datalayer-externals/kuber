{% if 'status' in entity.properties %}
{% include 'object-class/resource-status.jinja2' %}
{% else %}
{% include 'object-class/resource-statusless.jinja2' %}
{% endif %}
    def delete_resource(self, namespace: 'str' = None):
        """
        Deletes the {{ entity.class_name }} from the currently configured
        Kubernetes cluster.
        """
        names = [
            'delete_namespaced_{{ entity.class_name | snake_case }}',
            'delete_{{ entity.class_name | snake_case }}'
        ]

        _kube_api.execute(
            action='delete',
            resource=self,
            names=names,
            namespace=namespace,
            api_client=None,
            api_args={'name': self.metadata.name}
        )

    @staticmethod
    def get_resource_api(
            api_client: client.ApiClient = None,
            **kwargs
    ) -> 'client.{{ kubernetes_api_class_name }}':
        """
        Returns an instance of the kubernetes API client associated with
        this object.
        """
        if api_client:
            kwargs['apl_client'] = api_client
        return client.{{ kubernetes_api_class_name }}(**kwargs)
